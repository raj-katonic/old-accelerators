{"version":3,"sources":["assets/jupyterLabWorkspace.png","assets/jupyterNotebookWorkspace.png","assets/codeWorkspace.png","assets/workspaceImg1.png","components/custom/notebooks/NotebookTable.js","views/app/notebook/notebook-table.js"],"names":["NotebookTable","useState","setError","notebooks","setNotebooks","isLoaded","setIsLoaded","username","setUsername","openSts","setOpenSts","imageName","deleteNotebook","name","a","axios","get","startNotebook","stopNotebook","images","vsCodeImgs","jupyterLabImages","jupyterNotebookImages","Popup","props","className","style","zIndex","marginTop","color","workspace","onClick","handleClose","setTimeout","window","location","reload","IntroPage","src","laptop","alt","href","target","rel","CreateWorkspaceButton","length","type","to","renderDownButtons","value1","value2","image","includes","rStudioImages","labelStudioImages","fontSize","disabled","displayCPU","value","charAt","slice","parseInt","toString","concat","renderAge","createTime","Date","Math","abs","now","floor","togglePopup","useCallback","stsName","getAllNotebooks","fetch","then","res","json","workspaces","error","useEffect","getUser","user","userName","WorkspaceHeader","fontWeight","map","item","id","stsImageName","vscodeWorkspace","jupyterNotebookWorkspace","jupyterLabWorkspace","stsReadyReplicas","stsReplicas","stsCreateTime","title","propertyName","stsMemory","stsCpu","border","backgroundColor","AllNotebooks","Row","xxs","textHead"],"mappings":"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","file":"katonicstatic/js/38.4e92ac09.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"katonicstatic/media/jupyterLabWorkspace.b3a931ca.png\";","export default __webpack_public_path__ + \"katonicstatic/media/jupyterNotebookWorkspace.c5187b98.png\";","export default __webpack_public_path__ + \"katonicstatic/media/codeWorkspace.608db854.png\";","export default __webpack_public_path__ + \"katonicstatic/media/workspaceImg1.4367d28b.png\";","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/display-name */\r\n/* eslint-disable no-nested-ternary */\r\n/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable react/jsx-key */\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getUser } from \"../../../helpers/Utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport jupyterLabWorkspace from \"../../../assets/jupyterLabWorkspace.png\";\r\nimport jupyterNotebookWorkspace from \"../../../assets/jupyterNotebookWorkspace.png\";\r\nimport vscodeWorkspace from \"../../../assets/codeWorkspace.png\";\r\nimport laptop from \"../../../assets/workspaceImg1.png\";\r\n\r\n// NAMES FOR CUSTOM KATONIC IMAGES \r\nconst NotebookTable = () => {\r\n  const [error, setError] = useState(null);\r\n  const [notebooks, setNotebooks] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n\r\n  const [openSts, setOpenSts] = useState(false);\r\n  const imageName = {\r\n    \"katonic/katonic-studio:3.0\": \"Katonic Studio\",\r\n    \"katonic/notebook-env:base\": \"Katonic-base\",\r\n    \"katonic/notebook-env:pyspark\": \"PySpark\",\r\n    \"katonic/notebook-env:torchcpu1.8.1\": \"PyTorch\",\r\n    \"katonic/notebook-env:tf2.4\": \"Tensorflow-2\",\r\n    \"katonic/notebook-env:tf1.4\": \"Tensorflow-1\",\r\n    \"katonic/notebook-env:scikt-learn\": \"Scikt-learn\",\r\n    \"katonic/vscode:latest\": \"VS Code\",\r\n    \"katonic/vscode:miniconda\": \"VS Code (python)\",\r\n    \"katonic/vscode:miniconda-java11\": \"VSCode(Python3 and Java)\",\r\n    \"katonic/lab-env:torchcpu1.8.1\": \"PyTorch\",\r\n    \"katonic/lab-env:tf2.4\": \"Tensorflow-2\",\r\n    \"katonic/lab-env:tf1.4\": \"Tensorflow-1\",\r\n    \"katonic/lab-env:scikt-learn\": \"Scikt-learn\",\r\n  };\r\n\r\n  // VALIDATION FOR IMAGE NAME \r\n  const getImageName = (propertyName) => {\r\n    return imageName[propertyName] ? imageName[propertyName] : propertyName;\r\n  };\r\n\r\n  // DELETE NOTEBOOK API CALL\r\n  const deleteNotebook = async (name) => {\r\n    await axios.get(`/platform/api/notebook/${name}/delete`);\r\n  };\r\n\r\n  // START NOTEBOOK API CALL\r\n  const startNotebook = async (name) => {\r\n    await axios.get(`/platform/api/notebook/${name}/startNb`);\r\n  };\r\n\r\n  // STOP NOTEBOOK API CALL\r\n  const stopNotebook = async (name) => {\r\n    await axios.get(`/platform/api/notebook/${name}/stopNb`);\r\n  };\r\n\r\n  const images = {\r\n    vsCodeImgs: [\r\n      \"katonic/vscode:latest\",\r\n      \"katonic/vscode:miniconda\",\r\n      \"katonic/vscode:miniconda-java11\"\r\n    ],\r\n    jupyterLabImages: [\r\n      \"katonic/katonic-studio:3.0\",\r\n      \"katonic/notebook-env:base\",\r\n      \"katonic/lab-env:torchcpu1.8.1\",\r\n      \"katonic/lab-env:tf2.4\",\r\n      \"katonic/lab-env:tf1.4\",\r\n      \"katonic/lab-env:scikt-learn\",\r\n    ],\r\n    jupyterNotebookImages: [\r\n      \"katonic/notebook-env:torchcpu1.8.1\",\r\n      \"katonic/notebook-env:tf2.4\",\r\n      \"katonic/notebook-env:tf1.4\",\r\n      \"katonic/notebook-env:scikt-learn\"\r\n    ]\r\n  }\r\n\r\n  // DELETE POPUP COMPONENT\r\n  const Popup = (props) => {\r\n    return (\r\n      <div className=\"popup-box\" style={{ zIndex: 1000 }} key={props.workspace}>\r\n        <div className=\"box\">\r\n          <div className=\"popup-box-content\">\r\n            <div className=\"popup-info\">\r\n              <div className=\"popup-content-left\">\r\n                <i className=\"simple-icon-exclamation deleteIcon popup-icon\" />\r\n              </div>\r\n              <div className=\"popup-content-right\">\r\n                <h3 style={{ marginTop: \"3rem\" }}>\r\n                  You are about to delete a workspace!\r\n                </h3>\r\n                <h3>\r\n                  This will delete your workspace{\" \"}\r\n                  <strong style={{ color: \"#5c31ff\" }}>\r\n                    {props.workspace}\r\n                  </strong>{\" \"}\r\n                  permanently\r\n                </h3>\r\n                <h3>Are you sure?</h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"popup-box-btns\">\r\n              <button className=\"popup-btn\" onClick={props.handleClose}>\r\n                Cancel\r\n              </button>\r\n              <button\r\n                className=\"popup-btn popup-btn-delete\"\r\n                onClick={() => {\r\n                  deleteNotebook(props.workspace);\r\n                  setTimeout(() => window.location.reload(), 2000);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // INTRO PAGE COMPONENT WHEN THERE ARE NO NOTEBOOKS\r\n  const IntroPage = () => {\r\n    return (\r\n      <div className=\"introPage\">\r\n        <h3>Get Started with Workspaces</h3>\r\n        <img className=\"workspaceImg\" src={laptop} alt=\"intro\" />\r\n        <p>\r\n          Workspace sessions are Katonic hosted Interactive Development\r\n          Environment (IDE) sessions where you can create notebooks with\r\n          Jupyter, R Studio etc. &nbsp;\r\n          <span>\r\n            <a\r\n              href=\"https://learn.katonic.ai/\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Learn more\r\n            </a>\r\n          </span>\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // CREATE WORKSPACE BUTTON COMPONENT\r\n  const CreateWorkspaceButton = () => {\r\n    if (notebooks.length === 1) {\r\n      return (\r\n        <div>\r\n          <button className=\"workspaceCreateBtn disabledBtn\" type=\"button\">\r\n            <span>+</span>\r\n            Create Workspace\r\n          </button>\r\n          <p className=\"hideMessage\">Upgrade to create more workspaces!</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Link to=\"/platform/workspace/createWorkspace\">\r\n          <button className=\"workspaceCreateBtn\">\r\n            <span>+</span>\r\n            Create Workspace\r\n          </button>\r\n        </Link>\r\n      );\r\n    }\r\n  };\r\n\r\n  // START, STOP AND CONNECT BUTTON COMPONENTS \r\n  const renderDownButtons = (value1, value2, name, image, username) => {\r\n    let pathSuffix = \"\";\r\n    if (images.vsCodeImgs.includes(image)) {\r\n      pathSuffix = \"vscode/\"\r\n    } else if (images.jupyterNotebookImages.includes(image)) {\r\n      pathSuffix = \"\"\r\n    } else if (images.rStudioImages.includes(image)) {\r\n      pathSuffix = \"rstudio/\"\r\n    } else if (images.labelStudioImages.includes(image)) {\r\n      pathSuffix = \"labelstudio/\"\r\n    } else {\r\n      pathSuffix = \"lab?\"\r\n    }\r\n    if (value1 === 1) {\r\n      return (\r\n        <div>\r\n          <button className=\"runningBtn connectBtn\">\r\n            {\" \"}\r\n            <a\r\n              style={{ fontSize: \"12px\", color: \"white\" }}\r\n              href={images.vsCodeImgs.includes(image) ? `/${name}-${username}/vscode/` : images.jupyterNotebookImages.includes(image) ? `/${name}-${username}/` : `/${name}-${username}/lab?`}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Connect\r\n            </a>\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              stopNotebook(name);\r\n              setTimeout(() => window.location.reload(), 2000);\r\n            }}\r\n            className=\"runningBtn stopBtn\"\r\n          >\r\n            Stop\r\n          </button>\r\n        </div>\r\n      );\r\n    } else if (value2 >= 1) {\r\n      return (\r\n        <button className=\"runningBtn connectBtn\" disabled>\r\n          Start\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button\r\n          onClick={() => {\r\n            startNotebook(name);\r\n            setTimeout(() => window.location.reload(), 2000);\r\n          }}\r\n          className=\"runningBtn connectBtn\"\r\n        >\r\n          Start\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  // CPU DISPLAY COMPONENT\r\n  const displayCPU = (value) => {\r\n    if (value.charAt(value.length - 1) === \"m\") {\r\n      value = value.slice(0, -1);\r\n      value = parseInt(value);\r\n      value = value / 1000;\r\n      value = value.toString();\r\n      return value;\r\n    } else {\r\n      return value.concat(\".0\");\r\n    }\r\n  };\r\n\r\n  // MEMORY DISPLAY COMPONENT\r\n  const getMemory = (value) => {\r\n    value = value.slice(0, -1);\r\n    value = value.concat(\"B\");\r\n    return value;\r\n  };\r\n\r\n  // COMPONENT TO SHOW WORKSPACE STATUS\r\n  const renderButton = (value1, value2) => {\r\n    if (value1 === 1) {\r\n      return <button className=\"runningBtn\">Running</button>;\r\n    } else if (value2 >= 1) {\r\n      return <button className=\"processingBtn\">Processing</button>;\r\n    } else {\r\n      return <button className=\"stoppedBtn\">Stopped</button>;\r\n    }\r\n  };\r\n\r\n  // WORKSPACE AGE CONVERSION\r\n  const renderAge = (value) => {\r\n    let createTime = new Date(value);\r\n    createTime = Math.abs(Date.now() - createTime) / (1000 * 3600 * 24);\r\n    Math.floor(createTime);\r\n    if (Math.floor(createTime) === 1) {\r\n      return `${Math.floor(createTime)} day`;\r\n    }\r\n    return `${Math.floor(createTime)} days`;\r\n  };\r\n\r\n  // NOTEBOOK TABLE COMPONENT\r\n\r\n  const togglePopup = useCallback((stsName = false) => {\r\n    setOpenSts(stsName);\r\n  }, [setOpenSts]);\r\n\r\n  const getAllNotebooks = useCallback(async () => {\r\n    setIsLoaded(false);\r\n    await fetch(`/platform/api/notebook`)\r\n      .then(res => res.json())\r\n      .then(workspaces => {\r\n        setIsLoaded(true);\r\n        setNotebooks(workspaces);\r\n      },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [setIsLoaded, setNotebooks, setError]);\r\n\r\n  useEffect(() => {\r\n    getUser().then((user) => {\r\n      setUsername(user.userName);\r\n    });\r\n    getAllNotebooks();\r\n  }, [getAllNotebooks]);\r\n\r\n  const WorkspaceHeader = () => (\r\n    <div className=\"notebookHead\">\r\n      <p style={{ fontSize: \"22px\", fontWeight: \"500\" }}>Workspaces</p>\r\n      <div className=\"notebookHeadRight\">\r\n        <CreateWorkspaceButton />\r\n        <button\r\n          className=\"refreshButton\"\r\n          type=\"button\"\r\n          onClick={getAllNotebooks}\r\n        >\r\n          Refresh\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className=\"h-100 table-container\">\r\n        <WorkspaceHeader />\r\n        {\r\n          !isLoaded && <div className=\"loading\" />\r\n        }\r\n        {\r\n          isLoaded && notebooks.length === 0 && <IntroPage />\r\n        }\r\n        {\r\n          notebooks.map((item) => (\r\n            <div className=\"newTable\" key={item.stsName}>\r\n              <div id=\"tableLeft\">\r\n                <div className=\"imgContainer\">\r\n                  {\r\n                    item.stsImageName === \"\"\r\n                  }\r\n                  <img src={images.vsCodeImgs.includes(item.stsImageName) ? vscodeWorkspace : images.jupyterNotebookImages.includes(item.stsImageName) ? jupyterNotebookWorkspace : jupyterLabWorkspace} alt=\"Workspace Icon\" />\r\n                </div>\r\n                {renderDownButtons(\r\n                  item.stsReadyReplicas,\r\n                  item.stsReplicas,\r\n                  item.stsName,\r\n                  item.stsImageName,\r\n                  username\r\n                )}\r\n              </div>\r\n              <div id=\"tableRight\">\r\n                <div className=\"rightTop\">\r\n                  <div className=\"innerSection\">\r\n                    <p className=\"dataLabel\">Name</p>\r\n                    <p className=\"dataBox\">{item.stsName}</p>\r\n                    <p className=\"dataLabel\">Age</p>\r\n                    <p className=\"dataBox\">{renderAge(item.stsCreateTime)}</p>\r\n                  </div>\r\n                  <div title={item.stsImageName} className=\"innerSection\">\r\n                    <p className=\"dataLabel\">Image</p>\r\n                    <p className=\"dataBox\">\r\n                      {getImageName(item.stsImageName)}\r\n                    </p>\r\n                    <p className=\"dataLabel\">Memory</p>\r\n                    <p className=\"dataBox\">{getMemory(item.stsMemory)}</p>\r\n                  </div>\r\n                  <div className=\"innerSection\">\r\n                    <div className=\"btnContainer statusIndicator\">\r\n                      {renderButton(item.stsReadyReplicas, item.stsReplicas)}\r\n                    </div>\r\n                    <p className=\"dataLabel\">CPU</p>\r\n                    <p className=\"dataBox\">{displayCPU(item.stsCpu)}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"rightBottom\">\r\n                  <div className=\"btnContainer deleteBtnContainer\">\r\n                    <button\r\n                      style={{\r\n                        border: \"none\",\r\n                        backgroundColor: \"transparent\",\r\n                      }}\r\n                      onClick={() => togglePopup(item.stsName)}\r\n                      type=\"button\"\r\n                    >\r\n                      <i className=\"simple-icon-trash deleteIcon\" />\r\n                    </button>\r\n                    {openSts && openSts === item.stsName && (\r\n                      <Popup\r\n                        workspace={item.stsName}\r\n                        handleClose={togglePopup}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n          )\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotebookTable;","import React from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { Colxx } from '../../../components/common/CustomBootstrap';\r\nimport NotebookTable from '../../../components/custom/notebooks/NotebookTable';\r\n\r\nconst AllNotebooks = () => {\r\n  return (\r\n    <Row>\r\n      <Colxx xxs=\"12\">\r\n        <NotebookTable textHead=\"workspace.workspaces\" />\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\nexport default AllNotebooks;\r\n"],"sourceRoot":""}