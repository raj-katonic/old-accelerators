{"version":3,"sources":["components/custom/model/ModelRegistriesVersions.js","views/app/models/modelRegistries/registry-versions.js","../node_modules/reactstrap/es/CardTitle.js","components/DatatablePagination.js"],"names":["Table","columns","data","useTable","initialState","pageIndex","pageSize","useSortBy","usePagination","getTableProps","getTableBodyProps","prepareRow","headerGroups","page","canPreviousPage","canNextPage","pageCount","gotoPage","setPageSize","state","className","map","headerGroup","getHeaderGroupProps","headers","column","columnIndex","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","row","getRowProps","cells","cell","cellIndex","getCellProps","cellClass","pages","canPrevious","canNext","pageSizeOptions","showPageSizeOptions","showPageJump","defaultPageSize","onPageChange","p","onPageSizeChange","s","paginationMaxSize","ModelRegistriesVersions","useParams","modelName","modelIndex","useState","modelVersions","setModelVersions","isLoading","history","useHistory","useEffect","getVersionInfo","a","axios","get","res","cols","React","useMemo","Header","accessor","Cell","props","value","sortType","String","Date","Number","creation_timestamp","fetch","name","version","source","push","adminRoot","current_stage","style","display","flexDirection","justifyContent","backgroundColor","border","color","width","padding","height","alignItems","fontSize","fontWeight","borderRadius","pointerEvents","type","href","onClick","Card","CardBody","CardTitle","registryVersions","Row","xxs","textHead","_excluded","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","defaultProps","DataTablePagination","pageState","setPageState","changePage","_page","isNaN","Math","min","max","getSafePage","caret","size","direction","pageNumbers","i","renderPageJump","listClassName","disabled","totalPages","endPage","currentPage","startPage","maxSize","floor","pageButtons","active","renderPages","right","index","changePageSize"],"mappings":"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","file":"katonicstatic/js/29.5be3ddd7.chunk.js","sourcesContent":["/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/display-name */\r\n/* eslint-disable no-nested-ternary */\r\n/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable react/jsx-key */\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { adminRoot } from \"../../../constants/defaultValues\";\r\nimport { useTable, usePagination, useSortBy } from 'react-table';\r\nimport { Card, CardBody, CardTitle } from 'reactstrap';\r\nimport DataTablePagination from '../../DatatablePagination';\r\n// import products from '../../data/products';\r\n\r\nfunction Table({ columns, data }) {\r\n  // const [servers, setServers] = useState([]);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    prepareRow,\r\n    headerGroups,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageCount,\r\n    gotoPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0, pageSize: 6 },\r\n    },\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <table {...getTableProps()} className=\"r-table table\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column, columnIndex) => (\r\n                <th\r\n                  key={`th_${columnIndex}`}\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  className={\r\n                    column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? 'sorted-desc'\r\n                        : 'sorted-asc'\r\n                      : ''\r\n                  }\r\n                >\r\n                  {column.render('Header')}\r\n                  <span />\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell, cellIndex) => (\r\n                  <td\r\n                    key={`td_${cellIndex}`}\r\n                    {...cell.getCellProps({\r\n                      className: cell.column.cellClass,\r\n                    })}\r\n                  >\r\n                    {cell.render('Cell')}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      <DataTablePagination\r\n        page={pageIndex}\r\n        pages={pageCount}\r\n        canPrevious={canPreviousPage}\r\n        canNext={canNextPage}\r\n        pageSizeOptions={[4, 10, 20, 30, 40, 50]}\r\n        showPageSizeOptions={false}\r\n        showPageJump={false}\r\n        defaultPageSize={pageSize}\r\n        onPageChange={(p) => gotoPage(p)}\r\n        onPageSizeChange={(s) => setPageSize(s)}\r\n        paginationMaxSize={pageCount}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst ModelRegistriesVersions = () => {\r\n  const { modelName, modelIndex } = useParams();\r\n  const [modelVersions, setModelVersions] = useState([]);\r\n  const [loading, isLoading] = useState(false);\r\n  //   console.log(modelIndex, modelName);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getVersionInfo = async () => {\r\n      const res = await axios.get(\r\n        `/platform/api/models/registries/${modelIndex}/${modelName}`\r\n      );\r\n      //   console.log(res);\r\n      setModelVersions(res.data.modelVersions);\r\n    };\r\n    getVersionInfo();\r\n  }, []);\r\n\r\n  // console.log(modelVersions);\r\n\r\n  const cols = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: ' ',\r\n        accessor: () => {\r\n          return (\r\n            <i className=\"simple-icon-check text-success font-weight-bold h5 status-icon availableIcon\" />\r\n          );\r\n        },\r\n        cellClass: 'text-muted w-5',\r\n        Cell: (props) => <>{props.value}</>,\r\n        sortType: 'basic',\r\n      },\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'name',\r\n        cellClass: 'text-muted w-6',\r\n        Cell: (props) => <>{props.value}</>,\r\n        sortType: 'basic',\r\n      },\r\n      {\r\n        Header: 'Status',\r\n        accessor: 'status',\r\n        cellClass: 'text-muted w-3',\r\n        Cell: (props) => <>{props.value}</>,\r\n        sortType: 'basic',\r\n      },\r\n      {\r\n        Header: 'Version',\r\n        accessor: 'version',\r\n        cellClass: 'text-muted w-3',\r\n        Cell: (props) => <>{props.value}</>,\r\n        sortType: 'basic',\r\n      },\r\n      {\r\n        Header: 'Creation Date',\r\n        accessor: (row) => {\r\n          const str = String(new Date(Number(row.creation_timestamp)));\r\n          return str;\r\n        },\r\n        cellClass: 'text-muted w-9',\r\n        Cell: (props) => <>{props.value}</>,\r\n        sortType: 'basic',\r\n      },\r\n      {\r\n        Header: '  ',\r\n        accessor: (row) => {\r\n          async function handleDeploy() {\r\n            isLoading(true)\r\n            await fetch(`/platform/api/models/deploy/${row.name}/${row.version}/${row.source}`);\r\n            isLoading(false);\r\n            history.push(`${adminRoot}/models/servers`);\r\n          }\r\n          if (row.current_stage === 'Archived') {\r\n            return (\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'space-between',\r\n                }}\r\n              >\r\n                <button\r\n                  style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    backgroundColor: 'white',\r\n                    border: '1px solid black',\r\n                    color: 'black',\r\n                    width: '80px',\r\n                    padding: '7px',\r\n                    height: '30px',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    fontSize: '13px',\r\n                    fontWeight: 'bold',\r\n                    borderRadius: '13px',\r\n                    pointerEvents: 'none',\r\n                  }}\r\n                  type=\"button\"\r\n                >\r\n                  Archived\r\n                </button>\r\n                <button\r\n                  style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    backgroundColor: 'white',\r\n                    border: '1px solid lightgray',\r\n                    color: 'black',\r\n                    width: '80px',\r\n                    height: '30px',\r\n                    padding: '5px',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    fontSize: '13px',\r\n                    fontWeight: 'bold',\r\n                    borderRadius: '13px',\r\n                    pointerEvents: 'none',\r\n                  }}\r\n                  type=\"button\"\r\n                >\r\n                  <a href=\"/\" aria-disabled=\"true\">\r\n                    Deploy\r\n                  </a>\r\n                </button>\r\n              </div>\r\n            );\r\n          }\r\n          return (\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-between',\r\n              }}\r\n            >\r\n              <button\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                  backgroundColor: '#5c31ff',\r\n                  border: 'none',\r\n                  color: 'white',\r\n                  width: '85px',\r\n                  padding: '7px',\r\n                  height: '30px',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  fontSize: '13px',\r\n                  fontWeight: 'bold',\r\n                  borderRadius: '13px',\r\n                  pointerEvents: 'none',\r\n                }}\r\n                type=\"button\"\r\n              >\r\n                Production\r\n              </button>\r\n              <button\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                  backgroundColor: 'black',\r\n                  color: 'white',\r\n                  width: '80px',\r\n                  padding: '7px',\r\n                  height: '30px',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  fontSize: '13px',\r\n                  fontWeight: 'bold',\r\n                  borderRadius: '13px',\r\n                }}\r\n                type=\"button\"\r\n                onClick={handleDeploy}\r\n              >\r\n                Deploy\r\n              </button>\r\n            </div>\r\n          );\r\n        },\r\n        cellClass: 'text-muted w-7',\r\n        Cell: (props) => <>{props.value}</>,\r\n        sortType: 'basic',\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n  <>\r\n    { \r\n      isLoading && <div className=\"loading\" /> && \r\n      <Card className=\"h-100 table-container\">\r\n        <CardBody>\r\n          <CardTitle>\r\n            <h1>{modelName}</h1>\r\n          </CardTitle>\r\n          <Table columns={cols} data={modelVersions} />\r\n        </CardBody>\r\n      </Card>\r\n    }\r\n  </>\r\n  );\r\n};\r\n\r\nexport default ModelRegistriesVersions;\r\n","import React from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { Colxx } from '../../../../components/common/CustomBootstrap';\r\nimport ModelRegistriesVersions from '../../../../components/custom/model/ModelRegistriesVersions';\r\n\r\nconst registryVersions = () => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <ModelRegistriesVersions textHead=\"model.modelRegistries\" />\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default registryVersions;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","/* eslint-disable no-param-reassign */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\n\r\nconst DataTablePagination = ({\r\n  page,\r\n  pages,\r\n  canPrevious,\r\n  canNext,\r\n  pageSizeOptions,\r\n  showPageSizeOptions,\r\n  showPageJump,\r\n  defaultPageSize,\r\n  onPageChange,\r\n  onPageSizeChange,\r\n  paginationMaxSize,\r\n}) => {\r\n  const [pageState, setPageState] = useState(page);\r\n  const [pageSize, setPageSize] = useState(defaultPageSize);\r\n\r\n  useEffect(() => {\r\n    setPageState(page);\r\n  }, [page]);\r\n  const getSafePage = (_page) => {\r\n    let p = _page;\r\n    if (Number.isNaN(_page)) {\r\n      p = page;\r\n    }\r\n    return Math.min(Math.max(p, 0), pages - 1);\r\n  };\r\n\r\n  const changePageSize = (size) => {\r\n    onPageSizeChange(size);\r\n    setPageSize(size);\r\n  };\r\n\r\n  const changePage = (_page) => {\r\n    const p = getSafePage(_page);\r\n\r\n    if (p !== pageState) {\r\n      setPageState(p);\r\n      onPageChange(p);\r\n    }\r\n  };\r\n\r\n  const pageClick = (pageIndex) => {\r\n    changePage(pageIndex);\r\n  };\r\n\r\n  const renderPages = () => {\r\n    const totalPages = pages;\r\n    let endPage = pages;\r\n    const currentPage = pageState;\r\n    let startPage = 0;\r\n    const maxSize = paginationMaxSize;\r\n\r\n    if (maxSize) {\r\n      if (endPage > maxSize) {\r\n        startPage = Math.max(currentPage + 1 - Math.floor(maxSize / 2), 1);\r\n        endPage = startPage + maxSize - 1;\r\n        if (endPage > totalPages) {\r\n          endPage = totalPages;\r\n          startPage = endPage - maxSize + 1;\r\n        }\r\n        startPage -= 1;\r\n      }\r\n    }\r\n\r\n    const pageButtons = [];\r\n    for (let i = startPage; i < endPage; i += 1) {\r\n      const active = currentPage === i;\r\n      pageButtons.push(\r\n        <PaginationItem key={i} active={active}>\r\n          <PaginationLink onClick={() => pageClick(i)}>{i + 1}</PaginationLink>\r\n        </PaginationItem>\r\n      );\r\n    }\r\n    return pageButtons;\r\n  };\r\n\r\n  const renderPageJump = () => {\r\n    const pageNumbers = [];\r\n    for (let i = 0; i < pages; i += 1) {\r\n      pageNumbers.push(\r\n        <DropdownItem key={i} onClick={() => changePage(i)}>\r\n          {i + 1}\r\n        </DropdownItem>\r\n      );\r\n    }\r\n    return pageNumbers;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-center\">\r\n        {showPageJump && (\r\n          <div className=\"float-left pt-2\">\r\n            <span>Page </span>\r\n            <UncontrolledDropdown className=\"d-inline-block\">\r\n              <DropdownToggle caret color=\"outline-primary\" size=\"xs\">\r\n                {pageState + 1}\r\n              </DropdownToggle>\r\n              <DropdownMenu direction=\"left\">{renderPageJump()}</DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <span> of </span>\r\n            {pages}\r\n          </div>\r\n        )}\r\n\r\n        <Pagination\r\n          className=\"d-inline-block\"\r\n          size=\"sm\"\r\n          listClassName=\"justify-content-center\"\r\n          aria-label=\"Page navigation example\"\r\n        >\r\n          <PaginationItem className={`${!canPrevious && 'disabled'}`}>\r\n            <PaginationLink\r\n              className=\"prev\"\r\n              onClick={() => {\r\n                if (!canPrevious) return;\r\n                changePage(page - 1);\r\n              }}\r\n              disabled={!canPrevious}\r\n            >\r\n              <i className=\"simple-icon-arrow-left\" />\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n\r\n          {renderPages()}\r\n          <PaginationItem className={`${!canNext && 'disabled'}`}>\r\n            <PaginationLink\r\n              className=\"next\"\r\n              onClick={() => {\r\n                if (!canNext) return;\r\n                changePage(page + 1);\r\n              }}\r\n              disabled={!canNext}\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        </Pagination>\r\n        {showPageSizeOptions && (\r\n          <div className=\"float-right pt-2\">\r\n            <span className=\"text-muted text-small mr-1\">Items </span>\r\n            <UncontrolledDropdown className=\"d-inline-block\">\r\n              <DropdownToggle caret color=\"outline-primary]\" size=\"xs\">\r\n                {pageSize}\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                {pageSizeOptions.map((size, index) => {\r\n                  return (\r\n                    <DropdownItem\r\n                      key={index}\r\n                      onClick={() => changePageSize(size)}\r\n                    >\r\n                      {size}\r\n                    </DropdownItem>\r\n                  );\r\n                })}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default DataTablePagination;\r\n"],"sourceRoot":""}