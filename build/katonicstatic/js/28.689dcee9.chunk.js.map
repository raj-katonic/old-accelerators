{"version":3,"sources":["components/custom/model/ModelRegistries.js","views/app/models/modelRegistries/registries.js","../node_modules/reactstrap/es/CardTitle.js","components/DatatablePagination.js"],"names":["Table","columns","data","useTable","initialState","pageIndex","pageSize","useSortBy","usePagination","getTableProps","getTableBodyProps","prepareRow","headerGroups","page","canPreviousPage","canNextPage","pageCount","gotoPage","setPageSize","state","className","map","headerGroup","getHeaderGroupProps","headers","column","columnIndex","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","row","style","cursor","onClick","window","location","id","original","name","getRowProps","cells","cell","cellIndex","getCellProps","cellClass","pages","canPrevious","canNext","pageSizeOptions","showPageSizeOptions","showPageJump","defaultPageSize","onPageChange","p","onPageSizeChange","s","paginationMaxSize","ModelRegistries","textHead","useState","registries","setRegistries","getRegistries","a","axios","get","res","Array","isArray","modelRegs","useEffect","cols","React","useMemo","Header","accessor","Cell","props","value","sortType","String","Date","Number","creation_timestamp","last_updated_timestamp","Card","CardBody","CardTitle","IntlMessages","Row","xxs","_excluded","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","defaultProps","DataTablePagination","pageState","setPageState","changePage","_page","isNaN","Math","min","max","getSafePage","caret","color","size","direction","pageNumbers","i","push","renderPageJump","listClassName","disabled","totalPages","endPage","currentPage","startPage","maxSize","floor","pageButtons","active","renderPages","right","index","changePageSize"],"mappings":"iRAYA,SAASA,EAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KACxB,EAYIC,mBACF,CACEF,UACAC,OACAE,aAAc,CAAEC,UAAW,EAAGC,SAAU,IAE1CC,YACAC,iBAlBAC,EADF,EACEA,cACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,KACAC,EANF,EAMEA,gBACAC,EAPF,EAOEA,YACAC,EARF,EAQEA,UACAC,EATF,EASEA,SACAC,EAVF,EAUEA,YAVF,IAWEC,MAASd,EAXX,EAWWA,UAAWC,EAXtB,EAWsBA,SAWtB,OACE,qCACE,kDAAWG,KAAX,IAA4BW,UAAU,gBAAtC,UACE,gCACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAACI,EAAQC,GAAT,OACvB,+CAEMD,EAAOE,eAAeF,EAAOG,yBAFnC,IAGER,UACEK,EAAOI,SACHJ,EAAOK,aACL,cACA,aACF,GARR,UAWGL,EAAOM,OAAO,UACf,4BAZF,aACaL,eAiBrB,iDAAWhB,KAAX,aACGG,EAAKQ,KAAI,SAACW,GAET,OADArB,EAAWqB,GAET,4CACEC,MAAO,CAAEC,OAAQ,WACjBC,QAAS,WACPC,OAAOC,SAAP,sCAAiDL,EAAIM,GAArD,YAA2DN,EAAIO,SAASC,QAEtER,EAAIS,eALV,aAOGT,EAAIU,MAAMrB,KAAI,SAACsB,EAAMC,GAAP,OACb,8CAEMD,EAAKE,aAAa,CACpBzB,UAAWuB,EAAKlB,OAAOqB,aAH3B,aAMGH,EAAKZ,OAAO,UANf,aACaa,oBAczB,cAAC,IAAD,CACE/B,KAAMR,EACN0C,MAAO/B,EACPgC,YAAalC,EACbmC,QAASlC,EACTmC,gBAAiB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACrCC,qBAAqB,EACrBC,cAAc,EACdC,gBAAiB/C,EACjBgD,aAAc,SAACC,GAAD,OAAOtC,EAASsC,IAC9BC,iBAAkB,SAACC,GAAD,OAAOvC,EAAYuC,IACrCC,kBAAmB1C,OAM3B,IAyDe2C,EAzDS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAa,uCAAG,4BAAAC,EAAA,sEACFC,IAAMC,IAAN,mCADE,OACdC,EADc,OAEhBC,MAAMC,QAAQF,EAAIlE,KAAKqE,YACzBR,EAAcK,EAAIlE,KAAKqE,WAHL,2CAAH,qDAMnBC,qBAAU,WACRR,MACC,IAEH,IAAMS,EAAOC,IAAMC,SACjB,iBAAM,CACJ,CACEC,OAAQ,OACRC,SAAU,OACV/B,UAAW,kBACXgC,KAAM,SAACC,GAAD,OAAW,mCAAGA,EAAMC,SAC1BC,SAAU,SAEZ,CACEL,OAAQ,gBACRC,SAAU,SAAC7C,GAET,OADYkD,OAAO,IAAIC,KAAKC,OAAOpD,EAAIqD,uBAGzCvC,UAAW,kBACXgC,KAAM,SAACC,GAAD,OAAW,mCAAGA,EAAMC,SAC1BC,SAAU,SAEZ,CACEL,OAAQ,eACRC,SAAU,SAAC7C,GAET,OADYkD,OAAO,IAAIC,KAAKC,OAAOpD,EAAIsD,2BAGzCxC,UAAW,kBACXgC,KAAM,SAACC,GAAD,OAAW,mCAAGA,EAAMC,SAC1BC,SAAU,YAGd,IAGF,OACE,cAACM,EAAA,EAAD,CAAMnE,UAAU,wBAAhB,SACE,eAACoE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcpD,GAAIsB,MAEpB,cAAC5D,EAAD,CAAOC,QAASwE,EAAMvE,KAAM4D,UC1IrBA,UAZI,WACjB,OACE,mCACE,cAAC6B,EAAA,EAAD,UACE,cAAC,IAAD,CAAOC,IAAI,KAAX,SACE,cAAC,EAAD,CAAiBhC,SAAS,kC,gCCVpC,4EAEIiC,EAAY,CAAC,YAAa,YAAa,OAKvCC,EAAY,CACdC,IAAKC,cACL5E,UAAW6E,IAAUC,OACrBC,UAAWF,IAAUG,QAMnBX,EAAY,SAAmBV,GACjC,IAAI3D,EAAY2D,EAAM3D,UAClB+E,EAAYpB,EAAMoB,UAClBE,EAAMtB,EAAMgB,IACZO,EAAaC,YAA8BxB,EAAOc,GAElDW,EAAUC,0BAAgBC,IAAWtF,EAAW,cAAe+E,GACnE,OAAoBzB,IAAMiC,cAAcN,EAAKO,YAAS,GAAIN,EAAY,CACpElF,UAAWoF,MAIff,EAAUK,UAAYA,EACtBL,EAAUoB,aAjBS,CACjBd,IAAK,OAiBQN,O,0HCmJAqB,IApKa,SAAC,GAYtB,IAXLjG,EAWI,EAXJA,KACAkC,EAUI,EAVJA,MACAC,EASI,EATJA,YACAC,EAQI,EARJA,QACAC,EAOI,EAPJA,gBACAC,EAMI,EANJA,oBACAC,EAKI,EALJA,aACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,aACAE,EAEI,EAFJA,iBACAE,EACI,EADJA,kBAEA,EAAkCG,mBAAShD,GAA3C,mBAAOkG,EAAP,KAAkBC,EAAlB,KACA,EAAgCnD,mBAASR,GAAzC,mBAAO/C,EAAP,KAAiBY,EAAjB,KAEAsD,qBAAU,WACRwC,EAAanG,KACZ,CAACA,IACJ,IAaMoG,EAAa,SAACC,GAClB,IAAM3D,EAdY,SAAC2D,GACnB,IAAI3D,EAAI2D,EAIR,OAHI9B,OAAO+B,MAAMD,KACf3D,EAAI1C,GAECuG,KAAKC,IAAID,KAAKE,IAAI/D,EAAG,GAAIR,EAAQ,GAS9BwE,CAAYL,GAElB3D,IAAMwD,IACRC,EAAazD,GACbD,EAAaC,KAmDjB,OACE,mCACE,sBAAKnC,UAAU,cAAf,UACGgC,GACC,sBAAKhC,UAAU,kBAAf,UACE,yCACA,eAAC,IAAD,CAAsBA,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBoG,OAAK,EAACC,MAAM,kBAAkBC,KAAK,KAAnD,SACGX,EAAY,IAEf,cAAC,IAAD,CAAcY,UAAU,OAAxB,SAtBW,WAErB,IADA,IAAMC,EAAc,GADO,WAElBC,GACPD,EAAYE,KACV,cAAC,IAAD,CAAsB3F,QAAS,kBAAM8E,EAAWY,IAAhD,SACGA,EAAI,GADYA,KAFdA,EAAI,EAAGA,EAAI9E,EAAO8E,GAAK,EAAI,EAA3BA,GAOT,OAAOD,EAamCG,QAElC,wCACChF,KAIL,eAAC,IAAD,CACE3B,UAAU,iBACVsG,KAAK,KACLM,cAAc,yBACd,aAAW,0BAJb,UAME,cAAC,IAAD,CAAgB5G,UAAS,WAAM4B,GAAe,YAA9C,SACE,cAAC,IAAD,CACE5B,UAAU,OACVe,QAAS,WACFa,GACLiE,EAAWpG,EAAO,IAEpBoH,UAAWjF,EANb,SAQE,mBAAG5B,UAAU,+BA3EL,WAClB,IAAM8G,EAAanF,EACfoF,EAAUpF,EACRqF,EAAcrB,EAChBsB,EAAY,EACVC,EAAU5E,EAEZ4E,GACEH,EAAUG,KAEZH,GADAE,EAAYjB,KAAKE,IAAIc,EAAc,EAAIhB,KAAKmB,MAAMD,EAAU,GAAI,IAC1CA,EAAU,GAClBJ,IAEZG,GADAF,EAAUD,GACYI,EAAU,GAElCD,GAAa,GAKjB,IADA,IAAMG,EAAc,GAnBI,WAoBfX,GACP,IAAMY,EAASL,IAAgBP,EAC/BW,EAAYV,KACV,cAAC,IAAD,CAAwBW,OAAQA,EAAhC,SACE,cAAC,IAAD,CAAgBtG,QAAS,WA3B/B8E,EA2B+CY,IAAzC,SAA8CA,EAAI,KAD/BA,KAHhBA,EAAIQ,EAAWR,EAAIM,EAASN,GAAK,EAAI,EAArCA,GAQT,OAAOW,EAmDAE,GACD,cAAC,IAAD,CAAgBtH,UAAS,WAAM6B,GAAW,YAA1C,SACE,cAAC,IAAD,CACE7B,UAAU,OACVe,QAAS,WACFc,GACLgE,EAAWpG,EAAO,IAEpBoH,UAAWhF,EANb,SAQE,mBAAG7B,UAAU,mCAIlB+B,GACC,sBAAK/B,UAAU,mBAAf,UACE,sBAAMA,UAAU,6BAAhB,oBACA,eAAC,IAAD,CAAsBA,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBoG,OAAK,EAACC,MAAM,mBAAmBC,KAAK,KAApD,SACGpH,IAEH,cAAC,IAAD,CAAcqI,OAAK,EAAnB,SACGzF,EAAgB7B,KAAI,SAACqG,EAAMkB,GAC1B,OACE,cAAC,IAAD,CAEEzG,QAAS,kBA3HN,SAACuF,GACtBlE,EAAiBkE,GACjBxG,EAAYwG,GAyHqBmB,CAAenB,IAFhC,SAIGA,GAHIkB","file":"katonicstatic/js/28.689dcee9.chunk.js","sourcesContent":["/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/display-name */\r\n/* eslint-disable no-nested-ternary */\r\n/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable react/jsx-key */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useTable, usePagination, useSortBy } from \"react-table\";\r\nimport { Card, CardBody, CardTitle } from \"reactstrap\"; //\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport DataTablePagination from \"../../DatatablePagination\";\r\n\r\nfunction Table({ columns, data }) {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    prepareRow,\r\n    headerGroups,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageCount,\r\n    gotoPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0, pageSize: 6 },\r\n    },\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <table {...getTableProps()} className=\"r-table table\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column, columnIndex) => (\r\n                <th\r\n                  key={`th_${columnIndex}`}\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  className={\r\n                    column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \"sorted-desc\"\r\n                        : \"sorted-asc\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  {column.render(\"Header\")}\r\n                  <span />\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  window.location = `/platform/models/registries/${row.id}/${row.original.name}`;\r\n                }}\r\n                {...row.getRowProps()}\r\n              >\r\n                {row.cells.map((cell, cellIndex) => (\r\n                  <td\r\n                    key={`td_${cellIndex}`}\r\n                    {...cell.getCellProps({\r\n                      className: cell.column.cellClass,\r\n                    })}\r\n                  >\r\n                    {cell.render(\"Cell\")}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      <DataTablePagination\r\n        page={pageIndex}\r\n        pages={pageCount}\r\n        canPrevious={canPreviousPage}\r\n        canNext={canNextPage}\r\n        pageSizeOptions={[4, 10, 20, 30, 40, 50]}\r\n        showPageSizeOptions={false}\r\n        showPageJump={false}\r\n        defaultPageSize={pageSize}\r\n        onPageChange={(p) => gotoPage(p)}\r\n        onPageSizeChange={(s) => setPageSize(s)}\r\n        paginationMaxSize={pageCount}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst ModelRegistries = ({ textHead }) => {\r\n  const [registries, setRegistries] = useState([]);\r\n  const getRegistries = async () => {\r\n    const res = await axios.get(`/platform/api/models/registries`);\r\n    if (Array.isArray(res.data.modelRegs)) {\r\n      setRegistries(res.data.modelRegs);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getRegistries();\r\n  }, []);\r\n\r\n  const cols = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Name\",\r\n        accessor: \"name\",\r\n        cellClass: \"text-muted w-16\",\r\n        Cell: (props) => <>{props.value}</>,\r\n        sortType: \"basic\",\r\n      },\r\n      {\r\n        Header: \"Creation Date\",\r\n        accessor: (row) => {\r\n          const str = String(new Date(Number(row.creation_timestamp)));\r\n          return str;\r\n        },\r\n        cellClass: \"text-muted w-16\",\r\n        Cell: (props) => <>{props.value}</>,\r\n        sortType: \"basic\",\r\n      },\r\n      {\r\n        Header: \"Last Updated\",\r\n        accessor: (row) => {\r\n          const str = String(new Date(Number(row.last_updated_timestamp)));\r\n          return str;\r\n        },\r\n        cellClass: \"text-muted w-16\",\r\n        Cell: (props) => <>{props.value}</>,\r\n        sortType: \"basic\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Card className=\"h-100 table-container\">\r\n      <CardBody>\r\n        <CardTitle>\r\n          <IntlMessages id={textHead} />\r\n        </CardTitle>\r\n        <Table columns={cols} data={registries} />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ModelRegistries;\r\n","import React from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { Colxx } from '../../../../components/common/CustomBootstrap';\r\nimport ModelRegistries from '../../../../components/custom/model/ModelRegistries';\r\n\r\nconst registries = () => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <ModelRegistries textHead=\"model.modelRegistries\" />\r\n        </Colxx>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default registries;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","/* eslint-disable no-param-reassign */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\n\r\nconst DataTablePagination = ({\r\n  page,\r\n  pages,\r\n  canPrevious,\r\n  canNext,\r\n  pageSizeOptions,\r\n  showPageSizeOptions,\r\n  showPageJump,\r\n  defaultPageSize,\r\n  onPageChange,\r\n  onPageSizeChange,\r\n  paginationMaxSize,\r\n}) => {\r\n  const [pageState, setPageState] = useState(page);\r\n  const [pageSize, setPageSize] = useState(defaultPageSize);\r\n\r\n  useEffect(() => {\r\n    setPageState(page);\r\n  }, [page]);\r\n  const getSafePage = (_page) => {\r\n    let p = _page;\r\n    if (Number.isNaN(_page)) {\r\n      p = page;\r\n    }\r\n    return Math.min(Math.max(p, 0), pages - 1);\r\n  };\r\n\r\n  const changePageSize = (size) => {\r\n    onPageSizeChange(size);\r\n    setPageSize(size);\r\n  };\r\n\r\n  const changePage = (_page) => {\r\n    const p = getSafePage(_page);\r\n\r\n    if (p !== pageState) {\r\n      setPageState(p);\r\n      onPageChange(p);\r\n    }\r\n  };\r\n\r\n  const pageClick = (pageIndex) => {\r\n    changePage(pageIndex);\r\n  };\r\n\r\n  const renderPages = () => {\r\n    const totalPages = pages;\r\n    let endPage = pages;\r\n    const currentPage = pageState;\r\n    let startPage = 0;\r\n    const maxSize = paginationMaxSize;\r\n\r\n    if (maxSize) {\r\n      if (endPage > maxSize) {\r\n        startPage = Math.max(currentPage + 1 - Math.floor(maxSize / 2), 1);\r\n        endPage = startPage + maxSize - 1;\r\n        if (endPage > totalPages) {\r\n          endPage = totalPages;\r\n          startPage = endPage - maxSize + 1;\r\n        }\r\n        startPage -= 1;\r\n      }\r\n    }\r\n\r\n    const pageButtons = [];\r\n    for (let i = startPage; i < endPage; i += 1) {\r\n      const active = currentPage === i;\r\n      pageButtons.push(\r\n        <PaginationItem key={i} active={active}>\r\n          <PaginationLink onClick={() => pageClick(i)}>{i + 1}</PaginationLink>\r\n        </PaginationItem>\r\n      );\r\n    }\r\n    return pageButtons;\r\n  };\r\n\r\n  const renderPageJump = () => {\r\n    const pageNumbers = [];\r\n    for (let i = 0; i < pages; i += 1) {\r\n      pageNumbers.push(\r\n        <DropdownItem key={i} onClick={() => changePage(i)}>\r\n          {i + 1}\r\n        </DropdownItem>\r\n      );\r\n    }\r\n    return pageNumbers;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-center\">\r\n        {showPageJump && (\r\n          <div className=\"float-left pt-2\">\r\n            <span>Page </span>\r\n            <UncontrolledDropdown className=\"d-inline-block\">\r\n              <DropdownToggle caret color=\"outline-primary\" size=\"xs\">\r\n                {pageState + 1}\r\n              </DropdownToggle>\r\n              <DropdownMenu direction=\"left\">{renderPageJump()}</DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <span> of </span>\r\n            {pages}\r\n          </div>\r\n        )}\r\n\r\n        <Pagination\r\n          className=\"d-inline-block\"\r\n          size=\"sm\"\r\n          listClassName=\"justify-content-center\"\r\n          aria-label=\"Page navigation example\"\r\n        >\r\n          <PaginationItem className={`${!canPrevious && 'disabled'}`}>\r\n            <PaginationLink\r\n              className=\"prev\"\r\n              onClick={() => {\r\n                if (!canPrevious) return;\r\n                changePage(page - 1);\r\n              }}\r\n              disabled={!canPrevious}\r\n            >\r\n              <i className=\"simple-icon-arrow-left\" />\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n\r\n          {renderPages()}\r\n          <PaginationItem className={`${!canNext && 'disabled'}`}>\r\n            <PaginationLink\r\n              className=\"next\"\r\n              onClick={() => {\r\n                if (!canNext) return;\r\n                changePage(page + 1);\r\n              }}\r\n              disabled={!canNext}\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        </Pagination>\r\n        {showPageSizeOptions && (\r\n          <div className=\"float-right pt-2\">\r\n            <span className=\"text-muted text-small mr-1\">Items </span>\r\n            <UncontrolledDropdown className=\"d-inline-block\">\r\n              <DropdownToggle caret color=\"outline-primary]\" size=\"xs\">\r\n                {pageSize}\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                {pageSizeOptions.map((size, index) => {\r\n                  return (\r\n                    <DropdownItem\r\n                      key={index}\r\n                      onClick={() => changePageSize(size)}\r\n                    >\r\n                      {size}\r\n                    </DropdownItem>\r\n                  );\r\n                })}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default DataTablePagination;\r\n"],"sourceRoot":""}